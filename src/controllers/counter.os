
&HTTPMethod("GET")
Функция list() Экспорт

	ПараметрыЗамера = ЗамерыВремени.НачатьЗамер(ЗапросHTTP.Путь, ЗапросHTTP.СтрокаЗапроса, "counter", "list");

	ТипОбъектов = Неопределено;

	Если ТипЗнч(ЗначенияМаршрута) = Тип("Соответствие") Тогда
		ТипОбъектов = ЗначенияМаршрута.Получить("type");
	КонецЕсли;

	ЗамерыВремени.ЗафиксироватьПодготовкуПараметров(ПараметрыЗамера);

	Результат = ОбщегоНазначения.ДанныеВJSON(ПолучениеСчетчиков.Список(ТипОбъектов));

	ЗамерыВремени.ЗафиксироватьОкончаниеЗамера(ПараметрыЗамера);

	Возврат Содержимое(Результат);

КонецФункции // list()

&HTTPMethod("GET")
Функция get() Экспорт

	ПараметрыЗамера = ЗамерыВремени.НачатьЗамер(ЗапросHTTP.Путь, ЗапросHTTP.СтрокаЗапроса, "counter", "get");

	ТипОбъектовКластера = Неопределено;
	Счетчик = Неопределено;

	Если ТипЗнч(ЗначенияМаршрута) = Тип("Соответствие") Тогда
		ТипОбъектовКластера = ЗначенияМаршрута.Получить("type");
		Счетчик = ЗначенияМаршрута.Получить("counter");
	КонецЕсли;
	
	ПараметрыЗапроса = ЗапросHTTP.ПараметрыЗапроса();

	Формат = "json";
	Если НЕ ПараметрыЗапроса["format"] = Неопределено Тогда
		Формат = ПараметрыЗапроса["format"];
	КонецЕсли;

	Фильтр = ОбщегоНазначения.ФильтрИзПараметровЗапроса(ПараметрыЗапроса);

	ПервыеКоличество = 0;
	Если НЕ ПараметрыЗапроса["top"] = Неопределено Тогда
		ПервыеКоличество = Число(ПараметрыЗапроса["top"]);
	КонецЕсли;

	Измерения = "_all";
	Если НЕ ПараметрыЗапроса["dim"] = Неопределено Тогда
		Измерения = ПараметрыЗапроса["dim"];
	КонецЕсли;

	АгрегатнаяФункция = "count";
	Если НЕ ПараметрыЗапроса["aggregate"] = Неопределено Тогда
		АгрегатнаяФункция = ПараметрыЗапроса["aggregate"];
	КонецЕсли;

	ПараметрыСчетчиков = ПолучениеСчетчиков.ПараметрыСчетчиков();
	ПараметрыСчетчиковТипаОбъектов = ПараметрыСчетчиков[ТипОбъектовКластера];

	Поля = "";

	Для Каждого ТекИзмерение Из ПараметрыСчетчиковТипаОбъектов["dimentions"] Цикл
		Если ТекИзмерение.Значение["name_rac"] = Неопределено Тогда
			ИмяПоля = ТекИзмерение.Ключ;
		Иначе
			ИмяПоля = ТекИзмерение.Значение["name_rac"];
		КонецЕсли;
		Поля = Поля + ?(ЗначениеЗаполнено(Поля), ", ", "") + ИмяПоля;
	КонецЦикла;

	Для Каждого ТекСчетчик Из ПараметрыСчетчиковТипаОбъектов["counters"] Цикл
		Если ТекСчетчик.Значение["name_rac"] = Неопределено Тогда
			ИмяПоля = ТекСчетчик.Ключ;
		Иначе
			ИмяПоля = ТекСчетчик.Значение["name_rac"];
		КонецЕсли;
		Если ЗначениеЗаполнено(Счетчик) И НЕ ВРег(Счетчик) = ВРег(ИмяПоля) Тогда
			Продолжить;
		КонецЕсли;
		Поля = Поля + ?(ЗначениеЗаполнено(Поля), ", ", "") + ИмяПоля;
	КонецЦикла;

	Поля = ?(ЗначениеЗаполнено(Поля), Поля, "_all");

	ЗамерыВремени.ЗафиксироватьПодготовкуПараметров(ПараметрыЗамера);

	ОбъектыКластера = ПодключенияКАгентам.ОбъектыКластера(ТипОбъектовКластера, Истина, Поля, Фильтр);

	Результат = ПолучениеСчетчиков.Счетчики(ОбъектыКластера,
	                                        ТипОбъектовКластера,
	                                        Счетчик,
	                                        ПервыеКоличество,
	                                        Измерения,
	                                        АгрегатнаяФункция,
	                                        Формат);

	ЗамерыВремени.ЗафиксироватьОкончаниеЗамера(ПараметрыЗамера);

	Возврат Содержимое(Результат);

КонецФункции // get()
