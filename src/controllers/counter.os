
&HTTPMethod("GET")
Функция list() Экспорт

	ПараметрыЗамера = ЗамерыВремени.НачатьЗамер(ЗапросHTTP.Путь, ЗапросHTTP.СтрокаЗапроса, "counter", "list");

	ТипОбъектов = Неопределено;

	Если ТипЗнч(ЗначенияМаршрута) = Тип("Соответствие") Тогда
		ТипОбъектов = ЗначенияМаршрута.Получить("type");
	КонецЕсли;

	ЗамерыВремени.ЗафиксироватьПодготовкуПараметров(ПараметрыЗамера);

	Результат = ОбщегоНазначения.ДанныеВJSON(ПолучениеСчетчиков.Список(ТипОбъектов));

	ЗамерыВремени.ЗафиксироватьОкончаниеЗамера(ПараметрыЗамера);

	Возврат Содержимое(Результат);

КонецФункции // list()

&HTTPMethod("GET")
Функция get() Экспорт

	ПараметрыЗамера = ЗамерыВремени.НачатьЗамер(ЗапросHTTP.Путь, ЗапросHTTP.СтрокаЗапроса, "counter", "get");

	ТипОбъектовКластера = Неопределено;
	Счетчик = Неопределено;

	Если ТипЗнч(ЗначенияМаршрута) = Тип("Соответствие") Тогда
		ТипОбъектовКластера = ЗначенияМаршрута.Получить("type");
		Счетчик = ЗначенияМаршрута.Получить("counter");
	КонецЕсли;
	
	ПараметрыЗапроса = ЗапросHTTP.ПараметрыЗапроса();

	Формат = "json";
	Если НЕ ПараметрыЗапроса["format"] = Неопределено Тогда
		Формат = ПараметрыЗапроса["format"];
	КонецЕсли;

	Фильтр = ОбщегоНазначения.ФильтрИзПараметровЗапроса(ПараметрыЗапроса);

	ПервыеКоличество = 0;
	Если НЕ ПараметрыЗапроса["top"] = Неопределено Тогда
		ПервыеКоличество = Число(ПараметрыЗапроса["top"]);
	КонецЕсли;

	Измерения = "_all";
	Если НЕ ПараметрыЗапроса["dim"] = Неопределено Тогда
		Измерения = ПараметрыЗапроса["dim"];
	КонецЕсли;

	АгрегатнаяФункция = "count";
	Если НЕ ПараметрыЗапроса["aggregate"] = Неопределено Тогда
		АгрегатнаяФункция = ПараметрыЗапроса["aggregate"];
	КонецЕсли;

	ПараметрыСчетчиков = ПолучениеСчетчиков.ПараметрыСчетчиков();
	ПараметрыСчетчиковТипаОбъектов = ПараметрыСчетчиков[ТипОбъектовКластера];

	Поля = "";

	Для Каждого ТекИзмерение Из ПараметрыСчетчиковТипаОбъектов["dimentions"] Цикл
		Если ТекИзмерение.Значение["name_rac"] = Неопределено Тогда
			ИмяПоля = ТекИзмерение.Ключ;
		Иначе
			ИмяПоля = ТекИзмерение.Значение["name_rac"];
		КонецЕсли;
		Поля = Поля + ?(ЗначениеЗаполнено(Поля), ", ", "") + ИмяПоля;
	КонецЦикла;

	Для Каждого ТекСчетчик Из ПараметрыСчетчиковТипаОбъектов["counters"] Цикл
		Если ТекСчетчик.Значение["name_rac"] = Неопределено Тогда
			ИмяПоля = ТекСчетчик.Ключ;
		Иначе
			ИмяПоля = ТекСчетчик.Значение["name_rac"];
		КонецЕсли;
		Если ЗначениеЗаполнено(Счетчик) И НЕ ВРег(Счетчик) = ВРег(ИмяПоля) Тогда
			Продолжить;
		КонецЕсли;
		Поля = Поля + ?(ЗначениеЗаполнено(Поля), ", ", "") + ИмяПоля;
	КонецЦикла;

	Поля = ?(ЗначениеЗаполнено(Поля), Поля, "_all");

	ЗамерыВремени.ЗафиксироватьПодготовкуПараметров(ПараметрыЗамера);

	ОбъектыКластера = ПодключенияКАгентам.ОбъектыКластера(ТипОбъектовКластера, Истина, Поля, Фильтр);

	Счетчики = ПолучениеСчетчиков.Счетчики(ОбъектыКластера,
	                                        ТипОбъектовКластера,
	                                        Счетчик,
	                                        ПервыеКоличество,
	                                        Измерения,
	                                        АгрегатнаяФункция);

	Если ВРег(Формат) = ОбщегоНазначения.ФорматыРезультата().prometheus Тогда
		Результат = ФорматPrometheus(Счетчики.Счетчики, Счетчики.Префикс);
	ИначеЕсли ВРег(Формат) = ОбщегоНазначения.ФорматыРезультата().plain Тогда
		Результат = ФорматPlain(Счетчики.Счетчики, Счетчики.Префикс);
	Иначе
		Результат = ФорматJSON(Счетчики.Счетчики, Счетчики.Префикс);
	КонецЕсли;

	ЗамерыВремени.ЗафиксироватьОкончаниеЗамера(ПараметрыЗамера);

	Возврат Содержимое(Результат);

КонецФункции // get()

// Функция - преобразует переданные значения счетчиков в формат JSON
//
// Параметры:
//   Счетчики                 - Соответствие              - счетчики для преобразования
//     * <Имя счетчика>         - Соответствие              - содержимое счетчика
//       ** description           - Строка                    - описание счетчика из параметров
//       ** values                - Массив из Соответствие    - значения счетчика
//          *** <Имя измерения>     - Строка                    - значение измерения счетчика
//          *** _value              - Число, Дата, Булево       - значение счетчика
//
//   Префикс       - Строка           - строковый префикс счетчиков,
//                                      который будет добавлен к именам счетчиков в результате
//
// Возвращаемое значение:
//   Строка                 - значения счетчиков в формате JSON
//
Функция ФорматJSON(Счетчики, Префикс = "")

	Результат = Новый Соответствие();

	Для Каждого ТекСчетчик Из Счетчики Цикл

		ЗаголовокСчетчика = СтрШаблон("%1%2", Префикс, ТекСчетчик.Ключ);

		Результат.Вставить(ЗаголовокСчетчика, ТекСчетчик.Значение);

	КонецЦикла;

	Возврат ОбщегоНазначения.ДанныеВJSON(Результат);

КонецФункции // ФорматJSON()

// Функция - преобразует переданные значения счетчиков в формат Prometheus
//
// Параметры:
//   Счетчики      - Соответствие     - счетчики для преобразования
//   Префикс       - Строка           - строковый префикс счетчиков,
//                                      который будет добавлен к именам счетчиков в результате
//
// Возвращаемое значение:
//   Строка                 - значения счетчиков в формате Prometheus
//
Функция ФорматPrometheus(Счетчики, Префикс = "")

	Текст = Новый Массив();

	Для Каждого ТекСчетчик Из Счетчики Цикл

		ЗаголовокСчетчика = СтрШаблон("%1%2", Префикс, СтрЗаменить(ТекСчетчик.Ключ, "-", "_"));

		ОписаниеСчетчика = ТекСчетчик.Значение["description"];

		Текст.Добавить(СтрШаблон("# HELP %1 %2", ЗаголовокСчетчика, ОписаниеСчетчика));
		Текст.Добавить(СтрШаблон("# TYPE %1 gauge", ЗаголовокСчетчика));

		Для Каждого ТекЗначение Из ТекСчетчик.Значение["values"] Цикл

			ЗначенияИзмеренийСтрокой = "";
			ЗначениеСчетчика = Неопределено;
			Для Каждого ТекИзмерение Из ТекЗначение Цикл
				Если ВРег(ТекИзмерение.Ключ) = ВРег("_value") Тогда
					ЗначениеСчетчика = ТекИзмерение.Значение;
					Продолжить;
				КонецЕсли;

				ЗначениеИзмерения = ТекИзмерение.Значение;
				Если ТипЗнч(ЗначениеИзмерения) = Тип("Дата") Тогда
					ЗначениеИзмерения = Формат(ЗначениеИзмерения, "ДФ=yyyy-MM-ddThh:mm:ss");
				КонецЕсли;
				ЗначенияИзмеренийСтрокой = ЗначенияИзмеренийСтрокой +
				                           ?(ЗначенияИзмеренийСтрокой = "", "", ",") +
				                           СтрШаблон("%1=""%2""", СтрЗаменить(ТекИзмерение.Ключ, "-", "_"), ЗначениеИзмерения);
			КонецЦикла;

			Если НЕ ЗначениеЗаполнено(ЗначениеСчетчика) Тогда
				ЗначениеСчетчика = 0;
			КонецЕсли;
			Если ТипЗнч(ЗначениеСчетчика) = Тип("Число") Тогда
				ЗначениеСчетчика = Формат(ЗначениеСчетчика, "ЧРД=.; ЧН=; ЧГ=0");
			ИначеЕсли ТипЗнч(ЗначениеСчетчика) = Тип("Дата") Тогда
				ЗначениеСчетчика = Формат(ЗначениеСчетчика - Дата(1, 1, 1, 0, 0, 0), "ЧРД=.; ЧН=; ЧГ=0");
			КонецЕсли;
			Текст.Добавить(СтрШаблон("%1{%2} %3",
			                         ЗаголовокСчетчика,
			                         ЗначенияИзмеренийСтрокой,
			                         ЗначениеСчетчика));
		КонецЦикла;

		Текст.Добавить(" ");

	КонецЦикла;

	Возврат СтрСоединить(Текст, Символы.ПС);

КонецФункции // ФорматPrometheus()

// Функция - преобразует переданные значения счетчиков в плоский (Plain) текстовый формат
//
// Параметры:
//   Счетчики      - Соответствие     - счетчики для преобразования
//   Префикс       - Строка           - строковый префикс счетчиков,
//                                      который будет добавлен к именам счетчиков в результате
//
// Возвращаемое значение:
//   Строка                 - значения счетчиков в плоском (Plain) текстовом формате
//
Функция ФорматPlain(Счетчики, Префикс = "")

	Текст = Новый Массив();

	Для Каждого ТекСчетчик Из Счетчики Цикл

		Для Каждого ТекЗначение Из ТекСчетчик.Значение["values"] Цикл
			
			ЗначенияИзмеренийСтрокой = "";
			ЗначениеСчетчика = Неопределено;
			Для Каждого ТекИзмерение Из ТекЗначение Цикл
				Если ВРег(ТекИзмерение.Ключ) = ВРег("_value") Тогда
					ЗначениеСчетчика = ТекИзмерение.Значение;
					Продолжить;
				КонецЕсли;

				ЗначенияИзмеренийСтрокой = ЗначенияИзмеренийСтрокой +
				                           ?(ЗначенияИзмеренийСтрокой = "", "", ",") +
				                           СтрШаблон("%1=""%2""", ТекИзмерение.Ключ, ТекИзмерение.Значение);
			КонецЦикла;

			Если НЕ ЗначениеЗаполнено(ЗначениеСчетчика) Тогда
				ЗначениеСчетчика = 0;
			КонецЕсли;
			
			Если ТипЗнч(ЗначениеСчетчика) = Тип("Число") Тогда
				ЗначениеСчетчика = Формат(ЗначениеСчетчика, "ЧРД=.; ЧН=; ЧГ=0");
			КонецЕсли;

			Текст.Добавить(СтрШаблон("%1%2(%3): %4",
			                         Префикс,
			                         ТекСчетчик.Ключ,
			                         ЗначенияИзмеренийСтрокой,
			                         ЗначениеСчетчика));

		КонецЦикла;

	КонецЦикла;

	Возврат СтрСоединить(Текст, Символы.ПС);

КонецФункции // ФорматPlain()
