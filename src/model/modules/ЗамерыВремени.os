// ----------------------------------------------------------
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v.2.0. If a copy of the MPL
// was not distributed with this file, You can obtain one
// at http://mozilla.org/MPL/2.0/.
// ----------------------------------------------------------
// Codebase: https://github.com/ArKuznetsov/hirac/
// ----------------------------------------------------------

Перем ФайлЛога;   // - ЗаписьТекста - файл лога замеров времени

Функция НачатьЗамер(Путь, СтрокаЗапроса, Контроллер, Действие) Экспорт

	ПараметрыЗамера = СтруктураПараметровЗамера();

	ПараметрыЗамера.ДатаНачала       = ТекущаяДата();
	ПараметрыЗамера.Начало           = ТекущаяУниверсальнаяДатаВМиллисекундах();
	ПараметрыЗамера.Путь             = Путь;
	ПараметрыЗамера.СтрокаЗапроса    = СтрокаЗапроса;
	ПараметрыЗамера.Контроллер       = Контроллер;
	ПараметрыЗамера.Действие         = Действие;

	Возврат ПараметрыЗамера;

КонецФункции // НачатьЗамер()

Процедура ЗафиксироватьПодготовкуПараметров(ПараметрыЗамера) Экспорт

	Если НЕ Настройки.ЛогироватьЗамерыВремени() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗамера.ПодготовкаПараметров = ТекущаяУниверсальнаяДатаВМиллисекундах() - ПараметрыЗамера.Начало;

КонецПроцедуры // ЗафиксироватьПодготовкуПараметров()

Процедура ЗафиксироватьОкончаниеЗамера(ПараметрыЗамера) Экспорт

	Если НЕ Настройки.ЛогироватьЗамерыВремени() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗамера.Длительность  = ТекущаяУниверсальнаяДатаВМиллисекундах() - ПараметрыЗамера.Начало;

	СохранитьПараметрыЗамера(ПараметрыЗамера);

КонецПроцедуры // ЗафиксироватьОкончаниеЗамера()

Функция СтруктураПараметровЗамера()

	ПараметрыЗамера = Новый Структура();
	ПараметрыЗамера.Вставить("ДатаНачала");
	ПараметрыЗамера.Вставить("Начало");
	ПараметрыЗамера.Вставить("Путь");
	ПараметрыЗамера.Вставить("СтрокаЗапроса");
	ПараметрыЗамера.Вставить("Контроллер");
	ПараметрыЗамера.Вставить("Действие");
	ПараметрыЗамера.Вставить("ПодготовкаПараметров");
	ПараметрыЗамера.Вставить("Длительность");

	Возврат ПараметрыЗамера;

КонецФункции // СтруктураПараметровЗамера()

Функция ПараметрыЗамераСтрокой(ПараметрыЗамера)

	МассивПараметровЗамера = Новый Массив();

	МассивПараметровЗамера.Добавить(ПараметрыЗамера.ДатаНачала);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.Путь);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.СтрокаЗапроса);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.Контроллер);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.Действие);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.ПодготовкаПараметров);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.Длительность);

	Возврат СтрСоединить(МассивПараметровЗамера, ",");

КонецФункции // ПараметрыЗамераСтрокой()

Процедура СохранитьПараметрыЗамера(ПараметрыЗамера)

	Если ФайлЛога = Неопределено Тогда
		ФайлЛога = Новый ЗаписьТекста();
		ФайлЛога.Открыть(Настройки.ФайлЛогаЗамеровВремени(), , , Ложь);
	Иначе
		ФайлЛога.Открыть(Настройки.ФайлЛогаЗамеровВремени(), , , Истина);
	КонецЕсли;

	СтрокаЛога = ПараметрыЗамераСтрокой(ПараметрыЗамера);

	ФайлЛога.ЗаписатьСтроку(СтрокаЛога);
	
	ФайлЛога.Закрыть();

КонецПроцедуры // СохранитьПараметрыЗамера()
