// ----------------------------------------------------------
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v.2.0. If a copy of the MPL
// was not distributed with this file, You can obtain one
// at http://mozilla.org/MPL/2.0/.
// ----------------------------------------------------------
// Codebase: https://github.com/ArKuznetsov/hirac/
// ----------------------------------------------------------

Перем ФайлЛога;   // - ЗаписьТекста - файл лога замеров времени

// Функция - регистрирует факт начала замера производительности и возвращает описание параметров замера
//
// Параметры:
//   Путь             - Строка    - путь к запрашиваемому ресурсу
//   СтрокаЗапроса    - Строка    - строка HTTP-запроса
//   Контроллер       - Строка    - имя контроллера
//   Действие         - Строка    - имя действия
//
// Возвращаемое значение:
//   Структура    - описание параметров замера (см. СтруктураПараметровЗамера())
//
Функция НачатьЗамер(Путь, СтрокаЗапроса, Контроллер, Действие) Экспорт

	ПараметрыЗамера = СтруктураПараметровЗамера();

	ПараметрыЗамера.ДатаНачала       = ТекущаяДата();
	ПараметрыЗамера.Начало           = ТекущаяУниверсальнаяДатаВМиллисекундах();
	ПараметрыЗамера.Путь             = Путь;
	ПараметрыЗамера.СтрокаЗапроса    = СтрокаЗапроса;
	ПараметрыЗамера.Контроллер       = Контроллер;
	ПараметрыЗамера.Действие         = Действие;

	Возврат ПараметрыЗамера;

КонецФункции // НачатьЗамер()

// Процедура - фиксирует время подготовки параметров обработки запроса
//
// Параметры:
//   ПараметрыЗамера    - Структура    - описание параметров замера (см. СтруктураПараметровЗамера())
//
Процедура ЗафиксироватьПодготовкуПараметров(ПараметрыЗамера) Экспорт

	Если НЕ Настройки.ЛогироватьЗамерыВремени() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗамера.ПодготовкаПараметров = ТекущаяУниверсальнаяДатаВМиллисекундах() - ПараметрыЗамера.Начало;

КонецПроцедуры // ЗафиксироватьПодготовкуПараметров()

// Процедура - фиксирует окончание замера и время выполнения запроса
//
// Параметры:
//   ПараметрыЗамера    - Структура    - описание параметров замера (см. СтруктураПараметровЗамера())
//
Процедура ЗафиксироватьОкончаниеЗамера(ПараметрыЗамера) Экспорт

	Если НЕ Настройки.ЛогироватьЗамерыВремени() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗамера.Длительность  = ТекущаяУниверсальнаяДатаВМиллисекундах() - ПараметрыЗамера.Начало;

	СохранитьПараметрыЗамера(ПараметрыЗамера);

КонецПроцедуры // ЗафиксироватьОкончаниеЗамера()

// Функция - конструктор структуры параметров замера
//
// Возвращаемое значение:
//   Структура                            - описание параметров замера
//     *ДатаНачала              - Дата      - дата и время начала замера
//     *Начало                  - Число     - метка времени начала замера (мс.)
//     *Путь                    - Строка    - путь к запрашиваемому ресурсу
//     *СтрокаЗапроса           - Строка    - строка HTTP-запроса
//     *Контроллер              - Строка    - имя контроллера
//     *Действие                - Строка    - имя действия
//     *ПодготовкаПараметров    - Число     - время подготовки параметров запроса (мс.)
//     *Длительность            - Число     - время выполнения запроса (мс.)
//
Функция СтруктураПараметровЗамера()

	ПараметрыЗамера = Новый Структура();
	ПараметрыЗамера.Вставить("ДатаНачала");
	ПараметрыЗамера.Вставить("Начало");
	ПараметрыЗамера.Вставить("Путь");
	ПараметрыЗамера.Вставить("СтрокаЗапроса");
	ПараметрыЗамера.Вставить("Контроллер");
	ПараметрыЗамера.Вставить("Действие");
	ПараметрыЗамера.Вставить("ПодготовкаПараметров");
	ПараметрыЗамера.Вставить("Длительность");

	Возврат ПараметрыЗамера;

КонецФункции // СтруктураПараметровЗамера()

// Функция - преобразует результаты замера в строку для записи в лог-файл
//
// Параметры:
//   ПараметрыЗамера    - Структура    - описание параметров замера (см. СтруктураПараметровЗамера())
//
// Возвращаемое значение:
//   Строка    - строка результатов замера для записи в лог-файл
//
Функция ПараметрыЗамераСтрокой(ПараметрыЗамера)

	МассивПараметровЗамера = Новый Массив();

	МассивПараметровЗамера.Добавить(ПараметрыЗамера.ДатаНачала);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.Путь);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.СтрокаЗапроса);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.Контроллер);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.Действие);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.ПодготовкаПараметров);
	МассивПараметровЗамера.Добавить(ПараметрыЗамера.Длительность);

	Возврат СтрСоединить(МассивПараметровЗамера, ",");

КонецФункции // ПараметрыЗамераСтрокой()

// Процедура - записывает результаты замера в лог-файл
//
// Параметры:
//   ПараметрыЗамера    - Структура    - описание параметров замера (см. СтруктураПараметровЗамера())
//
Процедура СохранитьПараметрыЗамера(ПараметрыЗамера)

	Если ФайлЛога = Неопределено Тогда
		ФайлЛога = Новый ЗаписьТекста();
		ФайлЛога.Открыть(Настройки.ФайлЛогаЗамеровВремени(), , , Ложь);
	Иначе
		ФайлЛога.Открыть(Настройки.ФайлЛогаЗамеровВремени(), , , Истина);
	КонецЕсли;

	СтрокаЛога = ПараметрыЗамераСтрокой(ПараметрыЗамера);

	ФайлЛога.ЗаписатьСтроку(СтрокаЛога);
	
	ФайлЛога.Закрыть();

КонецПроцедуры // СохранитьПараметрыЗамера()
